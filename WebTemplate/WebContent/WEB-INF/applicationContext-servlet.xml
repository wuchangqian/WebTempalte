<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:mvc="http://www.springframework.org/schema/mvc" 
             xmlns:security="http://www.springframework.org/schema/security" 
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-4.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                     http://www.springframework.org/schema/mvc  
            		 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security-4.0.xsd" default-autowire="byName">

    <mvc:annotation-driven>
        <!-- 返回json数据，@response使用 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>

            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--end-->

    <!-- <aop:config>
    	<aop:aspect id="userBrowserLogger" ref="userBrowserLogger">调用日志类 
	        <aop:pointcut id="log" expression="execution(* com.datalearner.controller.*.*(..))"/>配置在log包下所有的类在调用之前都会被拦截 
	        <aop:before pointcut-ref="log" method="before"/>在log包下面所有的类的所有方法被调用之前都调用MyLog中的before方法 
	        <aop:after pointcut-ref="log" method="after"/>在log包下面所有的类的所有方法被调用之前都调用MyLog中的after方法 
        </aop:aspect> 
		</aop:config> -->
    
    <!-- 对静态资源放行 -->
    <mvc:default-servlet-handler />
    
    <context:annotation-config />
    
	<!-- 扫描拦截器目录 -->
  <context:component-scan base-package="org.test" />
    
  <!-- 启用security对service层方法保护的注解 -->
	<security:global-method-security jsr250-annotations="enabled"	secured-annotations="enabled" pre-post-annotations="enabled"/>
    
  <!-- 视图解析器 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/views/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>
	
</beans>